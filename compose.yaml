volumes:
  cache:
    driver: local

networks:
  terra_internal:
    driver: bridge

services:
  terrachat:
    container_name: chat
    image: terrachat:latest
    build: ./app
    restart: always
    env_file:
      - ./.env
    ports:
      - 8501:8501
    depends_on:
      - terraapi
    volumes:
      - ./app:/app
      - ./shared:/app/shared
    networks:
      - terra_internal
  
  terraapi:
    container_name: api
    image: terraapi:latest
    build: ./api
    restart: always
    env_file:
      - ./.env
    depends_on:
      - postgres
      - redis
    volumes:
      - ./api:/api
      - ./shared:/api/shared
    networks:
      - terra_internal
    extends:
      file: ./services.${ENV}.yaml
      service: terraapi
    
  postgres:
    image: postgres:16
    container_name: postgres
    hostname: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=${POSTGRES_DATA_PATH}
    volumes:
      - ${POSTGRES_DATA_PATH}:${POSTGRES_DATA_PATH}
      - ${POSTGRES_CONFIG_PATH}:${POSTGRES_CONFIG_PATH}
    command: ["postgres", "-c", "config_file=${POSTGRES_CONFIG_PATH}/postgresql.conf"]
    networks:
      - terra_internal
  
  redis:
    image: "redis/redis-stack:latest"
    container_name: "redis"
    restart: always
    volumes:
      - cache:/data
    networks:
      - terra_internal

  ollama:
    image: ollama/ollama:latest
    hostname: ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always
    environment:
      - OLLAMA_KEEP_ALIVE=24h
    volumes:
      - ${MODELS_PATH}:/root/.ollama
    extends:
      file: ./services.${ENV}.yaml
      service: ollama
    networks:
      - terra_internal